*&---------------------------------------------------------------------*
*& Report zikk_finalcase
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zikk_finalcase.

INCLUDE ZIKK_FINALCASE_TOP.

TABLES: sscrfields.


DATA: lv_fformat   TYPE i,      "(file_format) Used to check the format of the file to be uploaded
      lv_but_check TYPE i.      "Keeps information about which button was clicked on the selection-screen


SELECTION-SCREEN BEGIN OF TABBED BLOCK tab FOR 5 LINES.
  SELECTION-SCREEN TAB (50) tab_tab1 USER-COMMAND tab1 DEFAULT SCREEN 1001.
  SELECTION-SCREEN TAB (50) tab_tab2 USER-COMMAND tab2 DEFAULT SCREEN 1002.
SELECTION-SCREEN END OF BLOCK tab.


SELECTION-SCREEN BEGIN OF SCREEN 1001 AS SUBSCREEN.
PARAMETERS: p_employ TYPE zikk_employeeid,
            p_projct TYPE zikk_projectid.
SELECTION-SCREEN END OF SCREEN 1001.

SELECTION-SCREEN BEGIN OF SCREEN 1002 AS SUBSCREEN.
  PARAMETERS: p_fname TYPE localfile.
SELECTION-SCREEN END OF SCREEN 1002.


SELECTION-SCREEN: BEGIN OF BLOCK block WITH FRAME,
PUSHBUTTON 79(20) button1 USER-COMMAND but1 VISIBLE LENGTH 5,
PUSHBUTTON 26(43) button2 USER-COMMAND but2 VISIBLE LENGTH 5,
PUSHBUTTON 33(33) button3 USER-COMMAND but3 VISIBLE LENGTH 5.
SELECTION-SCREEN: END OF BLOCK block.

INITIALIZATION.

  tab_tab1 = 'View Recorded Data'.
  tab_tab2 = 'View/Upload Excel File'.

  PERFORM button_settings.  "Keeps details about button views


AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_fname.
  PERFORM f4_fname.


AT SELECTION-SCREEN.

  CASE sy-ucomm.
    WHEN 'BUT1'.
      sscrfields-ucomm = 'ONLI'.
    WHEN 'BUT2'.
      lv_but_check = 2.
      sscrfields-ucomm = 'ONLI'.
    WHEN 'BUT3'.
      lv_but_check = 3.
      sscrfields-ucomm = 'ONLI'.
  ENDCASE.



START-OF-SELECTION.

  IF lv_but_check EQ 3.

    PERFORM create_template.
    MESSAGE: 'Template downloaded.' TYPE 'S'.
    CLEAR lv_but_check.

  ELSEIF lv_but_check EQ 2.

    PERFORM update_project_status.
    MESSAGE: 'Project status updated.' TYPE 'S'.
    CLEAR lv_but_check.

  ELSE.

    CASE tab-dynnr.
      WHEN 1001.

        IF p_employ IS NOT INITIAL AND p_projct IS NOT INITIAL.

          SELECT * FROM zikk_employee LEFT OUTER JOIN zikk_project ON zikk_employee~employee_id EQ zikk_project~employee_id
            INTO CORRESPONDING FIELDS OF TABLE @gt_data[]
            WHERE zikk_employee~employee_id EQ @p_employ AND zikk_project~project_id EQ @p_projct.
          IF gt_data[] IS INITIAL.
            MESSAGE 'No data was found matching the values you entered!' TYPE 'I'.
          ELSE.
            PERFORM display_alv.
          ENDIF.

        ELSE.
          MESSAGE 'No field on the tab should be left empty!' TYPE 'I'.
        ENDIF.

      WHEN 1002.
        lv_fformat = strlen( p_fname ) - 4.

        IF p_fname IS INITIAL.
          MESSAGE 'File path is empty!' TYPE 'I'.
        ELSEIF p_fname+lv_fformat(4) EQ 'xlsx' OR p_fname+lv_fformat(4) EQ '.xls'.  "Accepted if the file is in xlsx or xls format
          PERFORM upload_excel_file CHANGING gv_control.
          IF gv_control NE 1.
            PERFORM display_alv.
          ENDIF.
        ELSE.
          MESSAGE 'The file is not in Excel format!' TYPE 'I'.
        ENDIF.
    ENDCASE.
  ENDIF.

INCLUDE ZIKK_FINALCASE_FRM.
